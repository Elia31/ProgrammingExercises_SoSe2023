@startuml
class com.example.carsellingplatform.ListingViewController {
- byte[] imageBytes
- StackPane tableViewPaneTechnical
- StackPane tableViewPaneAusstattung
- TextField ListingNameTextfield
- TextField priceTextfield
- Button showButton
- StackPane tableViewPane
- TextField usernameTextfield
- Button writeMailButton
- Button backButton
- TextField addressTextField
- TextField emailTextField
- TextField cityTextField
- TableView<ObservableList<String>> listingTable
- TableColumn<ObservableList<String>,String> airBagsColumn
- TableColumn<ObservableList<String>,String> airConditioningColumn
- TableColumn<ObservableList<String>,String> bodyTypeColumn
- TableColumn<ObservableList<String>,String> brandColumn
- TableColumn<ObservableList<String>,String> colorColumn
- TableColumn<ObservableList<String>,String> conditionColumn
- TableColumn<ObservableList<String>,String> consumptionColumn
- TableColumn<ObservableList<String>,String> cylinderCapacityColumn
- TableColumn<ObservableList<String>,String> descriptionColumn
- TableColumn<ObservableList<String>,String> doorsColumn
- TableColumn<ObservableList<String>,String> emissionClassColumn
- TableColumn<ObservableList<String>,String> engineColumn
- TableColumn<ObservableList<String>,String> environmentalBadgeColumn
- TableColumn<ObservableList<String>,String> fuelTypeColumn
- TableColumn<ObservableList<String>,String> gearboxColumn
- TableColumn<ObservableList<String>,String> generalInspectionColumn
- TableColumn<ObservableList<String>,String> interiorColumn
- TableColumn<ObservableList<String>,String> listingNameColumn
- TableColumn<ObservableList<String>,String> milesColumn
- TableColumn<ObservableList<String>,String> modelColumn
- TableColumn<ObservableList<String>,String> ownersColumn
- TableColumn<ObservableList<String>,String> performanceColumn
- TableColumn<ObservableList<String>,String> priceColumn
- TableColumn<ObservableList<String>,String> registrationDateColumn
- TableColumn<ObservableList<String>,String> seatsColumn
- TableColumn<ObservableList<String>,String> usernameColumn
- ImageView carImageView
- TableView<ObservableList<String>> technicalDataTable
- TableView<ObservableList<String>> carAusstattungTable
- User user
- int listingID
+ void initialize(URL,ResourceBundle)
+ void loadListingData()
+ void setUser(User)
+ User getUser()
+ void setListingID(int)
+ int getListingID()
+ void backButton(ActionEvent)
+ void extendButton()
+ byte[] getImageBytes(Image)
+ void writeEmail(ActionEvent)
}
class com.example.carsellingplatform.backend.util.DatabaseHandler {
- {static} DatabaseHandler databaseHandler
- String url
- String user
- String password
~ Connection connection
~ Statement statement
~ ResultSet resultSet
+ <<Create>> DatabaseHandler()
+ {static} DatabaseHandler getInstance()
+ void closeConnection()
+ ResultSet SelectData(String,String,String,String)
+ ResultSet SelectData(String,String,String,int)
+ boolean doesExist(ResultSet)
+ ResultSet createUser(String,String,String,String,String,String,String,String)
+ boolean isLoginCorrect(String,String)
+ ResultSet createListing(User,String,double,String,String,String,String,String,String,int,String,String,String,Date,Date,int,int,String,String,double,String,String,int,int,String,String,byte[],Date)
+ ResultSet selectListings()
+ ResultSet getResultSet(String)
+ ResultSet updateListing(String,double,String,String,String,String,String,String,int,String,String,String,Date,Date,int,int,String,String,double,String,String,int,int,String,String,byte[],int)
+ ResultSet selectListingAndUser(int)
+ ResultSet selectListingById(int)
+ ResultSet selectListingWithUsername(String)
+ ResultSet selectFilteredData(String,String,Object,Object,Object,Object)
+ void DeleteListing(String)
+ String getEmailIfExists(String)
+ void updateUserPassword(String,String)
+ boolean updateUser(String,String,String,String,String,String,String)
+ boolean updateUsernoPassword(String,String,String,String,String)
+ boolean deleteUser(String)
+ ResultSet getUser(String)
+ ResultSet selectSellerEmailAndListingName(int)
}
class com.example.carsellingplatform.DashboardController {
- AnchorPane backToDashboard
- ComboBox<String> brand
- ComboBox<String> model
- ComboBox<Object> registrationDate
- ComboBox<Object> price
- ComboBox<Object> mile
- ComboBox<Object> seat
- Label searchTextLabel
- Label usernameLabel
- VBox listingsBox
- Button myListings
+ void initialize(URL,ResourceBundle)
+ void search(ActionEvent)
+ void resetButton(ActionEvent)
+ void createListingButton(ActionEvent)
+ void logoutButton(ActionEvent)
+ void setUser(User)
+ void viewListingButton(ActionEvent,User,String)
+ void myListingsButton(ActionEvent)
+ void myProfilButton(ActionEvent)
+ List<String> setBrands()
+ List<String> setModels(String)
+ ObservableList<Object> setPrices()
+ ObservableList<Object> setMiles()
+ ObservableList<Object> setSeats()
+ ObservableList<Object> setRegistrationDates()
+ void initializeListings(ResultSet)
}
class com.example.carsellingplatform.ResetPasswordController {
~ Alert message
- TextField CodeTextField
- PasswordField ConfirmNewPasswordTextField
- Label ConfirmPasswordLabel
- PasswordField NewPasswordTextField
- Label PasswordLabel
- Label ResetPasswordTextField
- TextField UsernameEmailTextField
- Button backButton
- Label UsernameLabel
- Label VerificationCodeLabel
- Button confirmCode
- Button resetPassword
- Button sendCode
- String onetimeCode
- String userMail
- String newPassword
- DatabaseHandler databaseHandler
+ void initialize(URL,ResourceBundle)
- void sendCodeClicked(ActionEvent)
- void confirmCodeClicked(ActionEvent)
- void resetPasswordClicked(ActionEvent)
+ void backButtonClicked(ActionEvent)
}
class com.example.carsellingplatform.EditProfilController {
- TextField AddressField
- Label AddressText
- TextField CityField
- Label CityText
- PasswordField ConfirmPasswordField
- Label ConfirmPasswordText
- Button DeleteButton
- TextField FirstNameField
- Label FirstNameText
- Button GoBackButton
- TextField LastNameField
- Label LastNameText
- PasswordField PasswordField
- Label usernameLabel
- Label PasswordText
- Label PasswordText1
- Label PasswordText11
- Label PasswordText12
- Label PasswordText13
- Label RegistrationText
- Button UpdateButton
- Rectangle leftRectangle
- Rectangle rightRectangle
- Rectangle upperRectangle
- User user
- ResultSet rs
~ Alert message
+ void UpdateButtonClicked(ActionEvent)
+ void GoBackButtonClicked(ActionEvent)
+ void setUser(User)
+ void initialize(URL,ResourceBundle)
+ void loadUserData()
~ void DeleteButtonClicked(ActionEvent)
}
class com.example.carsellingplatform.RegistrationController {
~ Alert message
- TextField AddressField
- Label AddressText
- Label CityText
- TextField CityField
- PasswordField ConfirmPasswordField
- Label ConfirmPasswordText
- TextField EMailField
- Label EMailText
- TextField FirstNameField
- Label FirstNameText
- TextField LastNameField
- Label LastNameText
- PasswordField PasswordField
- Label PasswordText
- Button RegisterButton
- Label RegistrationText
- TextField UsernameField
- Label UsernameText
- Rectangle RegisterRectangle
- Text RegisterRectangleText
- Rectangle leftRectangle
- Rectangle upperRectangle
- Line AddressLine
- Line CityLine
- Line ConfirmPasswordLine
- Line EMailLine
- Line FirstNameLine
- Line LastNameLine
- Line PasswordLine
- Line UsernameLine
- ImageView logo
- Rectangle rightRectangle
- CubicCurve upperForm
- Button GoBackButton
+ {static} boolean EmailValid(String)
+ {static} boolean PasswordRequirementFullfilled(String)
~ void RegisterButtonClicked(ActionEvent)
~ void GoBackButtonClicked(ActionEvent)
}
class com.example.carsellingplatform.LoginController {
- Button loginButton
- Label loginMessageLabel
- PasswordField passwordPasswordfield
- Button registerButton
- TextField usernameTextfield
- Button forgotPassword
+ void loginButtonOnAction(ActionEvent)
+ void registerButtonOnAction(ActionEvent)
~ void forgotPasswordButtonOnAction(ActionEvent)
}
class com.example.carsellingplatform.backend.util.Mail {
- {static} String username
- {static} String password
- {static} Properties props
- {static} Session prepareSession()
+ {static} void sendEmailRegistration(String)
+ {static} void sendEmailDeletion(String)
+ {static} void sendOnetimeCode(String,String)
+ {static} void sendNewPasswordConfirmation(String)
+ {static} void sendMessage(String,String,String,String,String)
}
class com.example.carsellingplatform.backend.model.User {
- String FirstName
- String LastName
- String Username
- String Email
- String Address
- String City
+ <<Create>> User(String,String,String,String,String,String)
+ String getFirstName()
+ String getLastName()
+ String getUsername()
+ String getEmail()
+ String getAddress()
+ String getCity()
+ void setUsername(String)
+ void setFirstName(String)
+ void setLastName(String)
+ void setCity(String)
+ void setAddress(String)
+ void setEmail(String)
+ String toString()
}
class com.example.carsellingplatform.SceneSwitcher {
- Stage stage
- Scene scene
- Parent root
+ void switchToRegistration(ActionEvent)
+ void switchToLogin(ActionEvent)
+ void switchToDashboard(ActionEvent,User)
+ void switchToAddListing(ActionEvent,User)
+ void switchToEditListing(ActionEvent,User,int)
+ void switchToMyListings(ActionEvent,User)
+ void switchToListingView(ActionEvent,User,int)
+ void switchToResetPassword(ActionEvent)
+ void switchToEditProfil(ActionEvent,User)
}
class com.example.carsellingplatform.MyListingsController {
- User user
- ResultSet rs
- Button backToDashboardButton
- VBox listingsBox
- Button myProfile
- Label usernameLabel
- GridPane gridPane
+ void setUser(User)
+ void initialize(URL,ResourceBundle)
- void backToDashboard(ActionEvent)
- void initMyListings()
- void editListing(ActionEvent,User,String)
}
class com.example.carsellingplatform.Main {
+ void start(Stage)
+ {static} void main(String[])
}
class com.example.carsellingplatform.backend.util.Hash {
+ {static} String hash(String)
+ {static} String getSalt()
+ {static} boolean isCorrect(String,String,String)
}
class com.example.carsellingplatform.EditListingController {
~ Alert message
- User user
- int ListingID
- byte[] imageBytes
- Label ACLabel
- Pane AddListingPane
- Label AirbagsLabel
- ChoiceBox<String> BodyTypeChoice
- Label BodyTypeLabel
- Label BrandLabel
- TextField BrandTextfield
- ImageView CarPicture
- Label ColourLabel
- ChoiceBox<String> ColourPicker
- Label ConsumptionLabel
- TextField ConsumptionTextfield
- Label CylinderCapacityLabel
- ChoiceBox<Integer> CylinderCapacityChoice
- TextArea DescriptionArea
- Label DescriptionLabel
- ChoiceBox<String> DoorsChoice
- Label DoorsLabel
- ChoiceBox<String> EmissionClassChoice
- Label EmissionClassLabel
- ChoiceBox<String> EngineChoice
- Label EngineLabel
- ChoiceBox<String> EnvironmentalBadgeChoice
- Label EnvironmentalBadgeLabel
- ChoiceBox<String> FuelChoice
- Label FuelTypeLabel
- ChoiceBox<String> GearboxChoice
- Label GearboxLabel
- DatePicker GeneralInspectionDate
- Label GeneralInspectionLabel
- Label InteriorLabel
- Label ListingNameLabel
- TextField ListingNameTextfield
- Label MilesLabel
- TextField MilesTextField
- Label ModelLabel
- TextField ModelTextField
- ChoiceBox<Integer> OwnersChoice
- Label OwnersLabel
- Label PerformanceLabel
- TextField PerformanceTextField
- Label PriceLabel
- TextField PriceTextField
- DatePicker RegistrationDate
- Label RegistrationDateLabel
- ChoiceBox<Integer> SeatsChoice
- Label SeatsLabel
- Label createListingLabel
- ChoiceBox<String> ConditionChoice
- Label ConditionLabel
- ChoiceBox<String> AirBagChoice
- ChoiceBox<String> InteriorMaterialChoice
- ChoiceBox<String> ACChoice
- Button createListingButton
- Button AddPictureButton
- Button GoBack
~ DatabaseHandler mydbhandler
~ ResultSet car
- String[] Colours
- String[] BodyTypes
- String[] EmissionClasses
- String[] EnvironmentalBadges
- String[] FuelTypes
- String[] EngineTypes
- String[] Gearboxes
- String[] doors
- Integer[] seats
- Integer[] preOwners
- String[] Conditions
- Integer[] CylinderCapacities
- String[] AirBags
- String[] InteriorMaterials
- String[] AC
+ void setUser(User)
+ void setListingID(int)
+ void populateFields()
+ int getListingID()
+ byte[] getImageBytes(Image)
+ void initialize(URL,ResourceBundle)
~ void AddPictureButtonClicked(ActionEvent)
~ void UpdateListingButtonClicked(ActionEvent)
~ void GoBackClicked(ActionEvent)
}
class com.example.carsellingplatform.AddListingController {
~ Alert message
- User user
- byte[] imageBytes
- Label ACLabel
- Button GoBack
- Pane AddListingPane
- Label AirbagsLabel
- ChoiceBox<String> BodyTypeChoice
- Label BodyTypeLabel
- Label BrandLabel
- TextField BrandTextfield
- ImageView CarPicture
- Label ColourLabel
- ChoiceBox<String> ColourPicker
- Label ConsumptionLabel
- TextField ConsumptionTextfield
- Label CylinderCapacityLabel
- ChoiceBox<Integer> CylinderCapacityChoice
- TextArea DescriptionArea
- Label DescriptionLabel
- ChoiceBox<String> DoorsChoice
- Label DoorsLabel
- ChoiceBox<String> EmissionClassChoice
- Label EmissionClassLabel
- ChoiceBox<String> EngineChoice
- Label EngineLabel
- ChoiceBox<String> EnvironmentalBadgeChoice
- Label EnvironmentalBadgeLabel
- ChoiceBox<String> FuelChoice
- Label FuelTypeLabel
- ChoiceBox<String> GearboxChoice
- Label GearboxLabel
- DatePicker GeneralInspectionDate
- Label GeneralInspectionLabel
- Label InteriorLabel
- Label ListingNameLabel
- TextField ListingNameTextfield
- Label MilesLabel
- TextField MilesTextField
- Label ModelLabel
- TextField ModelTextField
- ChoiceBox<Integer> OwnersChoice
- Label OwnersLabel
- Label PerformanceLabel
- TextField PerformanceTextField
- Label PriceLabel
- TextField PriceTextField
- DatePicker RegistrationDate
- Label RegistrationDateLabel
- ChoiceBox<Integer> SeatsChoice
- Label SeatsLabel
- Label createListingLabel
- ChoiceBox<String> ConditionChoice
- Label ConditionLabel
- ChoiceBox<String> AirBagChoice
- ChoiceBox<String> InteriorMaterialChoice
- ChoiceBox<String> ACChoice
- Button createListingButton
- Button AddPictureButton
- String[] Colours
- String[] BodyTypes
- String[] EmissionClasses
- String[] EnvironmentalBadges
- String[] FuelTypes
- String[] EngineTypes
- String[] Gearboxes
- String[] doors
- Integer[] seats
- Integer[] preOwners
- String[] Conditions
- Integer[] CylinderCapacities
- String[] AirBags
- String[] InteriorMaterials
- String[] AC
+ void setUser(User)
+ void initialize(URL,ResourceBundle)
~ void AddPictureButtonClicked(ActionEvent)
~ void CreateListingButtonClicked(ActionEvent)
~ void GoBackClicked(ActionEvent)
}
class com.example.carsellingplatform.backend.util.Config {
- {static} Properties properties
+ {static} String getEmailUsername()
+ {static} String getEmailPassword()
+ {static} String getDatabaseUrl()
+ {static} String getDatabaseUser()
+ {static} String getDatabasePassword()
}


javafx.fxml.Initializable <|.. com.example.carsellingplatform.ListingViewController
javafx.fxml.Initializable <|.. com.example.carsellingplatform.DashboardController
javafx.fxml.Initializable <|.. com.example.carsellingplatform.ResetPasswordController
javafx.fxml.Initializable <|.. com.example.carsellingplatform.EditProfilController
javafx.fxml.Initializable <|.. com.example.carsellingplatform.MyListingsController
javafx.application.Application <|-- com.example.carsellingplatform.Main
javafx.fxml.Initializable <|.. com.example.carsellingplatform.EditListingController
javafx.fxml.Initializable <|.. com.example.carsellingplatform.AddListingController
@enduml